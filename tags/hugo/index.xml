<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on livebug&#39;s blog space</title>
    <link>https://livebug.github.io/tags/hugo/</link>
    <description>Recent content in hugo on livebug&#39;s blog space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Oct 2023 22:51:48 +0800</lastBuildDate>
    <atom:link href="https://livebug.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Add Gitalk 评论组件</title>
      <link>https://livebug.github.io/blogs/20231014-add-gitalk/</link>
      <pubDate>Sat, 14 Oct 2023 22:51:48 +0800</pubDate>
      <guid>https://livebug.github.io/blogs/20231014-add-gitalk/</guid>
      <description>1. 增加模板页在主题的目录下 themes/xxx/layouts/partials/gitalk.html 1{{ if .Site.Params.enableGitalk }} 2&amp;lt;div id=&amp;#34;gitalk-container&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; 3&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://unpkg.com/gitalk/dist/gitalk.css&amp;#34;&amp;gt; 4&amp;lt;script src=&amp;#34;https://unpkg.com/gitalk/dist/gitalk.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 5&amp;lt;script&amp;gt; 6 const gitalk = new Gitalk({ 7 clientID: &amp;#39;{{ .Site.Params.Gitalk.clientID }}&amp;#39;, 8 clientSecret: &amp;#39;{{ .Site.Params.Gitalk.clientSecret }}&amp;#39;, 9 repo: &amp;#39;{{ .Site.Params.Gitalk.repo }}&amp;#39;, 10 owner: &amp;#39;{{ .Site.Params.Gitalk.owner }}&amp;#39;, 11 admin: [&amp;#39;{{ .Site.Params.Gitalk.owner }}&amp;#39;], 12 id: location.pathname, // Ensure uniqueness and length less than 50 13 distractionFreeMode: false // Facebook-like distraction free mode 14 }); 15 (function () { 16 if ([&amp;#34;localhost&amp;#34;, &amp;#34;127.</description>
    </item>
    <item>
      <title>hugo new content 命令使用 &amp; 自定义新增文章脚本</title>
      <link>https://livebug.github.io/blogs/20231014-hugo-new-content/</link>
      <pubDate>Sat, 14 Oct 2023 20:27:57 +0800</pubDate>
      <guid>https://livebug.github.io/blogs/20231014-hugo-new-content/</guid>
      <description>hugo new content&#xA;创建新的内容文件并自动设置日期和标题。它将根据提供的路径猜测要创建的文件类型。&#xA;1hugo new content [path] [flags] hugo 新建文章，基本就是路径加文件名的命令，并不能只写名字，自动补全时间戳这种，自己写一个吧&#xA;1# 基本新建命令 2hugo new blogs/xxxxx.md hugonew.sh 脚本&#xA;1post_name=$1 2post_name=`echo $post_name | tr -s &amp;#39;&amp;#39;` # 去除多余空格 3post_name=` echo ${post_name} | sed &amp;#39;s/[ ]/-/g&amp;#39;` # 替换空格为 - 4echo ${post_name} 5date_string=`date +%Y%m%d` # 日期字符串 6date_string=`date +%Y%m%d%H%M%S` # 毫秒字符串 7date 8hugo new blogs/${post_name}.md $@ 9cd content/blogs/ 10mv ${post_name}.md ${date_string}-${post_name}.md 执行 自动拼接日期串 可以自己替换为毫秒字符串&#xA;1sh hugonew.sh &amp;#34;tests dsds SDASD &amp;#34; 2tests-dsds-SDASD 3Sat Oct 14 22:19:43 CST 2023 4Content &amp;#34;/home/sharif/myblog/content/blogs/tests-dsds-SDASD.</description>
    </item>
    <item>
      <title>使用 Github Actions 自动化发布博客</title>
      <link>https://livebug.github.io/blogs/20230930-github-actions/</link>
      <pubDate>Sat, 30 Sep 2023 13:58:58 +0800</pubDate>
      <guid>https://livebug.github.io/blogs/20230930-github-actions/</guid>
      <description>介绍背景：&#xA;博客网站myblog仓库底下有两个子库，一个子库是用来存储markdown文章的blogs仓库，一个是用来存储public内容的github pages库 livebug.github.io仓库&#xA;当博客网站样式更新提交，或者文章提交，触发myblog仓库的 actions ，执行完之后发布到pages仓库&#xA;开发myblog仓库的提交 actions 1# Sample workflow for building and deploying a Hugo site to GitHub Pages 2name: Deploy Hugo site to Pages 3 4on: 5 # Runs on pushes targeting the default branch 6 push: 7 branches: [&amp;#34;master&amp;#34;] 8 9 # Allows you to run this workflow manually from the Actions tab 10 workflow_dispatch: 11 12# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages 13permissions: 14 contents: read 15 pages: write 16 id-token: write 17 18# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.</description>
    </item>
  </channel>
</rss>
